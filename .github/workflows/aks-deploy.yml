name: Deploy to AKS

on:
  push:
    branches: [main, develop]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "your-acr-name"
  RESOURCE_GROUP: "your-resource-group"
  CLUSTER_NAME: "your-aks-cluster"

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --overwrite-existing

    - name: Deploy infrastructure components
      run: |
        echo "Deploying secrets..."
        kubectl apply -f k8s/secrets.yaml
        
        echo "Deploying Kafka and Zookeeper..."
        kubectl apply -f k8s/kafka-zookeeper.yaml
        
        echo "Deploying Cassandra..."
        kubectl apply -f k8s/cassandra.yaml
        
        echo "Deploying Prometheus..."
        kubectl apply -f k8s/prometheus.yaml
        
        echo "Deploying Grafana..."
        kubectl apply -f k8s/grafana.yaml

    - name: Wait for infrastructure to be ready
      run: |
        echo "Waiting for Zookeeper to be ready..."
        kubectl wait --for=condition=available --timeout=300s deployment/zookeeper
        
        echo "Waiting for Kafka to be ready..."
        kubectl wait --for=condition=available --timeout=300s deployment/kafka
        
        echo "Waiting for Cassandra to be ready..."
        kubectl wait --for=condition=ready --timeout=300s pod -l app=cassandra
        
        echo "Waiting for Prometheus to be ready..."
        kubectl wait --for=condition=available --timeout=300s deployment/prometheus
        
        echo "Waiting for Grafana to be ready..."
        kubectl wait --for=condition=available --timeout=300s deployment/grafana

    - name: Deploy microservices
      run: |
        echo "Deploying Auth Service..."
        kubectl apply -f ../babbly-auth-service/k8s/
        
        echo "Deploying User Service..."
        kubectl apply -f ../babbly-user-service/k8s/
        
        echo "Deploying Post Service..."
        kubectl apply -f ../babbly-post-service/k8s/
        
        echo "Deploying Comment Service..."
        kubectl apply -f ../babbly-comment-service/k8s/
        
        echo "Deploying Like Service..."
        kubectl apply -f ../babbly-like-service/k8s/

    - name: Deploy API Gateway
      run: |
        echo "Deploying API Gateway..."
        kubectl apply -f ../babbly-api-gateway/k8s/

    - name: Deploy Frontend
      run: |
        echo "Deploying Frontend..."
        kubectl apply -f ../babbly-frontend/k8s/

    - name: Wait for deployments to be ready
      run: |
        echo "Waiting for all deployments to be ready..."
        kubectl wait --for=condition=available --timeout=300s deployment/auth-service
        kubectl wait --for=condition=available --timeout=300s deployment/user-service
        kubectl wait --for=condition=available --timeout=300s deployment/post-service
        kubectl wait --for=condition=available --timeout=300s deployment/comment-service
        kubectl wait --for=condition=available --timeout=300s deployment/like-service
        kubectl wait --for=condition=available --timeout=300s deployment/api-gateway
        kubectl wait --for=condition=available --timeout=300s deployment/frontend

    - name: Get service information
      run: |
        echo "Getting service information..."
        kubectl get services
        echo "Getting pod status..."
        kubectl get pods
        echo "Getting external IP for API Gateway..."
        kubectl get service api-gateway
        echo "Getting monitoring services..."
        kubectl get service prometheus grafana

    - name: Verify deployment
      run: |
        echo "Verifying Kafka topics..."
        kubectl exec -it deployment/kafka -- kafka-topics --bootstrap-server localhost:9092 --list || true
        
        echo "Checking service connectivity..."
        kubectl get endpoints 